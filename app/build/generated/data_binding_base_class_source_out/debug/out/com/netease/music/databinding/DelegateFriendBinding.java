// Generated by data binding compiler. Do not edit!
package com.netease.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.netease.music.R;
import com.netease.music.ui.state.CloudVillageFragmentViewModel;
import com.scwang.smart.refresh.layout.SmartRefreshLayout;
import com.scwang.smart.refresh.layout.listener.OnLoadMoreListener;
import com.scwang.smart.refresh.layout.listener.OnRefreshListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DelegateFriendBinding extends ViewDataBinding {
  @NonNull
  public final SmartRefreshLayout refreshLayoutDelegateFriend;

  @NonNull
  public final RecyclerView rvDelegateFriend;

  @Bindable
  protected CloudVillageFragmentViewModel mVm;

  @Bindable
  protected OnRefreshListener mRefreshListener;

  @Bindable
  protected OnLoadMoreListener mLoadMoreListener;

  protected DelegateFriendBinding(Object _bindingComponent, View _root, int _localFieldCount,
      SmartRefreshLayout refreshLayoutDelegateFriend, RecyclerView rvDelegateFriend) {
    super(_bindingComponent, _root, _localFieldCount);
    this.refreshLayoutDelegateFriend = refreshLayoutDelegateFriend;
    this.rvDelegateFriend = rvDelegateFriend;
  }

  public abstract void setVm(@Nullable CloudVillageFragmentViewModel vm);

  @Nullable
  public CloudVillageFragmentViewModel getVm() {
    return mVm;
  }

  public abstract void setRefreshListener(@Nullable OnRefreshListener refreshListener);

  @Nullable
  public OnRefreshListener getRefreshListener() {
    return mRefreshListener;
  }

  public abstract void setLoadMoreListener(@Nullable OnLoadMoreListener loadMoreListener);

  @Nullable
  public OnLoadMoreListener getLoadMoreListener() {
    return mLoadMoreListener;
  }

  @NonNull
  public static DelegateFriendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_friend, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DelegateFriendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DelegateFriendBinding>inflateInternal(inflater, R.layout.delegate_friend, root, attachToRoot, component);
  }

  @NonNull
  public static DelegateFriendBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_friend, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DelegateFriendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DelegateFriendBinding>inflateInternal(inflater, R.layout.delegate_friend, null, false, component);
  }

  public static DelegateFriendBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DelegateFriendBinding bind(@NonNull View view, @Nullable Object component) {
    return (DelegateFriendBinding)bind(component, view, R.layout.delegate_friend);
  }
}
