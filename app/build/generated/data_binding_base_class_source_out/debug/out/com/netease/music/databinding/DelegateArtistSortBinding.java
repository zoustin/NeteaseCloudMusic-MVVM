// Generated by data binding compiler. Do not edit!
package com.netease.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.chad.library.adapter.base.BaseQuickAdapter;
import com.netease.lib_common_ui.widget.ArtistSortView;
import com.netease.music.R;
import com.netease.music.ui.page.search.artist.ArtistSortActivity;
import com.netease.music.ui.state.ArtistSortViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DelegateArtistSortBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imgArtistSortBack;

  @NonNull
  public final RecyclerView rvArtistSort;

  @Bindable
  protected ArtistSortViewModel mVm;

  @Bindable
  protected ArtistSortView.OnChooseArtistSortListener mListener;

  @Bindable
  protected BaseQuickAdapter mAdapter;

  @Bindable
  protected ArtistSortActivity.ClickProxy mProxy;

  protected DelegateArtistSortBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imgArtistSortBack, RecyclerView rvArtistSort) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgArtistSortBack = imgArtistSortBack;
    this.rvArtistSort = rvArtistSort;
  }

  public abstract void setVm(@Nullable ArtistSortViewModel vm);

  @Nullable
  public ArtistSortViewModel getVm() {
    return mVm;
  }

  public abstract void setListener(@Nullable ArtistSortView.OnChooseArtistSortListener listener);

  @Nullable
  public ArtistSortView.OnChooseArtistSortListener getListener() {
    return mListener;
  }

  public abstract void setAdapter(@Nullable BaseQuickAdapter adapter);

  @Nullable
  public BaseQuickAdapter getAdapter() {
    return mAdapter;
  }

  public abstract void setProxy(@Nullable ArtistSortActivity.ClickProxy proxy);

  @Nullable
  public ArtistSortActivity.ClickProxy getProxy() {
    return mProxy;
  }

  @NonNull
  public static DelegateArtistSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_artist_sort, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DelegateArtistSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DelegateArtistSortBinding>inflateInternal(inflater, R.layout.delegate_artist_sort, root, attachToRoot, component);
  }

  @NonNull
  public static DelegateArtistSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_artist_sort, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DelegateArtistSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DelegateArtistSortBinding>inflateInternal(inflater, R.layout.delegate_artist_sort, null, false, component);
  }

  public static DelegateArtistSortBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DelegateArtistSortBinding bind(@NonNull View view, @Nullable Object component) {
    return (DelegateArtistSortBinding)bind(component, view, R.layout.delegate_artist_sort);
  }
}
