// Generated by data binding compiler. Do not edit!
package com.netease.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.netease.music.R;
import com.netease.music.ui.page.drawer.CloudMusicActivity;
import com.netease.music.ui.state.CloudMusicViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DelegateUserCloudBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imgCloudBack;

  @NonNull
  public final ImageView imgTabMore;

  @NonNull
  public final ImageView imgTabSearch;

  @NonNull
  public final RecyclerView rvCloudMusic;

  @NonNull
  public final TextView tvUserCloudSize;

  @NonNull
  public final TextView tvUserCloudTitle;

  @Bindable
  protected CloudMusicViewModel mVm;

  @Bindable
  protected CloudMusicActivity.ClickProxy mProxy;

  protected DelegateUserCloudBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imgCloudBack, ImageView imgTabMore, ImageView imgTabSearch,
      RecyclerView rvCloudMusic, TextView tvUserCloudSize, TextView tvUserCloudTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgCloudBack = imgCloudBack;
    this.imgTabMore = imgTabMore;
    this.imgTabSearch = imgTabSearch;
    this.rvCloudMusic = rvCloudMusic;
    this.tvUserCloudSize = tvUserCloudSize;
    this.tvUserCloudTitle = tvUserCloudTitle;
  }

  public abstract void setVm(@Nullable CloudMusicViewModel vm);

  @Nullable
  public CloudMusicViewModel getVm() {
    return mVm;
  }

  public abstract void setProxy(@Nullable CloudMusicActivity.ClickProxy proxy);

  @Nullable
  public CloudMusicActivity.ClickProxy getProxy() {
    return mProxy;
  }

  @NonNull
  public static DelegateUserCloudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_user_cloud, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DelegateUserCloudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DelegateUserCloudBinding>inflateInternal(inflater, R.layout.delegate_user_cloud, root, attachToRoot, component);
  }

  @NonNull
  public static DelegateUserCloudBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.delegate_user_cloud, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DelegateUserCloudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DelegateUserCloudBinding>inflateInternal(inflater, R.layout.delegate_user_cloud, null, false, component);
  }

  public static DelegateUserCloudBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DelegateUserCloudBinding bind(@NonNull View view, @Nullable Object component) {
    return (DelegateUserCloudBinding)bind(component, view, R.layout.delegate_user_cloud);
  }
}
